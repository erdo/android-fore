apply plugin: 'maven-publish'
apply plugin: 'signing'

println "[${LIB_ARTIFACT_ID} lib publish file]"

group = "${rootProject.ext.LIB_GROUP}"
version =  "${rootProject.ext.LIB_VERSION_NAME}"


ext["signing.keyId"] = "${rootProject.ext.SIGNING_KEY_ID}"
ext["signing.password"] = "${rootProject.ext.SIGNING_PASSWORD}"
ext["signing.secretKeyRingFile"] = "${rootProject.ext.SIGNING_KEY_RING_FILE}"


project.afterEvaluate {
	publishing {
		publications {
			release(MavenPublication) {

				from components.java

				groupId = "${rootProject.ext.LIB_GROUP}"
				artifactId = LIB_ARTIFACT_ID
				version = "${rootProject.ext.LIB_VERSION_NAME}"

				artifact(sourcesJar)
				artifact(javadocJar)

				pom {
					name = "${rootProject.ext.PROJ_NAME}"
					description = LIB_DESCRIPTION
					url = "${rootProject.ext.POM_URL}"

					licenses {
						license {
							name = "${rootProject.ext.LICENCE_NAME}"
							url = "${rootProject.ext.LICENCE_URL}"
						}
					}
					developers {
						developer {
							id = "${rootProject.ext.LIB_DEVELOPER_ID}"
							name = "${rootProject.ext.LIB_DEVELOPER_NAME}"
							email = "${rootProject.ext.LIB_DEVELOPER_EMAIL}"
						}
					}
					scm {
						connection = "${rootProject.ext.POM_SCM_CONNECTION}"
						developerConnection = "${rootProject.ext.POM_SCM_CONNECTION}"
						url = "${rootProject.ext.POM_SCM_URL}"
					}
				}
			}
		}
		repositories {
			maven {
				name = "mavenCentral"

				def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
				def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
				url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

				credentials {
					username = "${rootProject.ext.MAVEN_USER}"
					password = "${rootProject.ext.MAVEN_PASSWORD}"
				}
			}
		}
	}

	signing {
		sign(publishing.publications)
	}
}

task javadocJar(type: Jar) {
	from javadoc
	classifier 'javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier 'sources'
}

artifacts {
	archives(sourcesJar)
}
